-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Please see the README on GitHub at
--   <a>https://github.com/input-output-hk/plutus#readme</a>
@package plutus-playground-server
@version 0.1.0.0

module Playground.Interpreter
replaceModuleName :: Text -> Text
ensureMkFunctionExists :: Text -> Text
mkCompileScript :: Text -> Text
avoidUnsafe :: (MonadError PlaygroundError m) => SourceCode -> m ()
runscript :: (MonadIO m, MonadError PlaygroundError m) => Handle -> FilePath -> Text -> m (ExitCode, String, String)
compile :: (MonadMask m, MonadIO m, MonadError PlaygroundError m) => SourceCode -> m CompilationResult
runFunction :: (MonadMask m, MonadIO m, MonadError PlaygroundError m) => Evaluation -> m (Blockchain, [EmulatorEvent], [(Wallet, Value)])
mkRunScript :: Text -> Text -> Text
runghcOpts :: [String]
lookupRunghc :: (MonadIO m, MonadError PlaygroundError m) => m String
ignoringIOErrors :: MonadCatch m => m () -> m ()
withSystemTempFile :: (MonadMask m, MonadIO m, MonadError PlaygroundError m) => FilePath -> (FilePath -> Handle -> m a) -> m a
jsonToString :: ToJSON a => a -> String
mkExpr :: (MonadError PlaygroundError m) => Evaluation -> m ByteString
getJsonString :: (MonadError PlaygroundError m) => Value -> m String
walletActionExpr :: (MonadError PlaygroundError m) => [Wallet] -> Expression -> m String
mkApplyExpr :: String -> [String] -> String
(<+>) :: String -> String -> String

module Playground.Server
mkHandlers :: (MonadLogger m, MonadIO m) => m (Server API)

module Playground.Usecases
vesting :: ByteString
game :: ByteString
messages :: ByteString
crowdfunding :: ByteString
